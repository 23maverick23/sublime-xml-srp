{
    "name": "XML-SRP",
    "scopeName": "text.xml",
    "fileTypes": ["txt", "xml"],
    "patterns": [
        {
            "match": "#.*",
            "name": "comment.xml-srp",
            "comment": "Comments."
        },
        {
            "match": "OA_(FIELDS|CUSTOM_FIELDS|FIELDS_INITIAL_ONLY)(?=\\s)",
            "name": "storage.type.xml-srp",
            "comment": "OpenAir field declarations."
        },
        {
            "match": "NS_(FIELDS|CUSTOM_FIELDS|CUSTOM_FIELDS_FROM_SO_INVOICE_HEADER|CUSTOM_FIELDS_FROM_SO_INVOICE_LINE_ITEM)(?=\\s)",
            "name": "storage.type.xml-srp",
            "comment": "OpenAir field declarations."
        },
        {
            "match": "_(TODAY|REMOVE)",
            "name": "constant.language.xml-srp entity.name.function.xml-srp",
            "comment": "Custom syntax."
        },
        {
            "match": "(<([A-Z_\/])*?>)",
            "name": "entity.name.tag.xml-srp",
            "comment": "Section header tags."
        },
        {
            "match": "<(\\b\\w+\\b)\\s*(\\b\\w+\\b)>",
            "name": "entity.name.function.xml-srp",
            "comment": "Value pair mapping (start)."
        },
        {
            "match": "<\\/(\\b\\w+\\b)>",
            "name": "entity.name.function.xml-srp",
            "comment": "Value pair mapping (end)."
        },
        {
            "match": "((FILTER|IF)\\s<<END)",
            "name": "constant.other.xml-srp",
            "comment": "Filter and conditional logic (start)."
        },
        {
            "match": "END(?=\\s)",
            "name": "constant.other.xml-srp",
            "comment": "Filter and conditional logic (end)."
        },
        {
            "match": "(IF(?=\\s)|THEN(?=\\s)|ELSE(?=\\s)|AND(?=\\s)|OR(?=\\s))",
            "name": "constant.other.xml-srp",
            "comment": "Conditional mapping keywords."
        },
        {
            "match": "(|:)lookup(.)*?(?:=)",
            "name": "support.type.xml-srp variable.parameter.xml-srp",
            "comment": "Lookup logic."
        },
        {
            "match": "((?<=\\s)>|(?<=\\s)<(?=\\s)|=|(?<=\\s)<=|(?<=\\s)>=|(?<=\\s)<>)",
            "name": "keyword.operator.xml-srp",
            "comment": "Operators."
        },
        {
            "match": "'(.)*?'",
            "name": "string.quoted.single.xml-srp",
            "comment": "String values."
        },
        {
            "match": "(?<=\\s)\\d+",
            "name": "constant.numeric.xml-srp",
            "comment": "Numeric values."
        },
        {
            "match": "(“|”|‘|`)",
            "name": "invalid.xml-srp",
            "comment": "Invalid characters."
        }
    ],
    "uuid": "4b5be207-5b29-4085-a2da-1a7ce286775a"
}
